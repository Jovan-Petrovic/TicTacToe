/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import logic.CommunicationWithServer;
import thread.AcceptingResponses;
import transfer.ClientRequest;
import transfer.ServerResponse;
import util.Operations;

/**
 *
 * @author Bron Zilar
 */
public class ClientForm extends javax.swing.JFrame {

    private char player;
    private String sign;
    private String oppositeSign;
    private boolean flag;
    private boolean flag1;
    private boolean flag2;
    private boolean flag3;
    private int counter;
   
    /**
     * Creates new form ClientForm
     */
    public ClientForm() {
        initComponents();
        ServerResponse sr = CommunicationWithServer.getInstance().acceptResponse();
        player = (char) sr.getResponse();
        jlabPlayer.setText(sr.getMessage());
        sign = String.valueOf(player);
        if(sign.equals("X")) {
            oppositeSign = "O";
        } else {
            oppositeSign = "X";
        }
        if(sign.equals("O")) {
            jbtnPlay.setEnabled(false);
            jlabTurn.setText("It's opponent turn to play.");
            jlabTurn.setForeground(Color.RED);
        } else {
            jlabTurn.setText("It's your turn to play.");
            jlabTurn.setForeground(Color.BLUE);
        }
        flag = false;
        flag1 = false;
        flag2 = false;
        flag3 = false;
        counter = 0;
        
        AcceptingResponses ar = new AcceptingResponses(this);
        ar.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtxt1 = new javax.swing.JTextField();
        jtxt6 = new javax.swing.JTextField();
        jtxt8 = new javax.swing.JTextField();
        jtxt2 = new javax.swing.JTextField();
        jtxt7 = new javax.swing.JTextField();
        jtxt9 = new javax.swing.JTextField();
        jtxt3 = new javax.swing.JTextField();
        jtxt4 = new javax.swing.JTextField();
        jtxt5 = new javax.swing.JTextField();
        jlabPlayer = new javax.swing.JLabel();
        jbtnPlay = new javax.swing.JButton();
        jtxtInput = new javax.swing.JTextField();
        jlabNoOfField = new javax.swing.JLabel();
        jlabTurn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setBackground(new java.awt.Color(153, 153, 255));

        jtxt1.setEditable(false);
        jtxt1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt1.setText("1");

        jtxt6.setEditable(false);
        jtxt6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt6.setText("6");

        jtxt8.setEditable(false);
        jtxt8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt8.setText("8");

        jtxt2.setEditable(false);
        jtxt2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt2.setText("2");

        jtxt7.setEditable(false);
        jtxt7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt7.setText("7");

        jtxt9.setEditable(false);
        jtxt9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt9.setText("9");

        jtxt3.setEditable(false);
        jtxt3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt3.setText("3");

        jtxt4.setEditable(false);
        jtxt4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt4.setText("4");

        jtxt5.setEditable(false);
        jtxt5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtxt5.setText("5");

        jbtnPlay.setText("Play");
        jbtnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPlayActionPerformed(evt);
            }
        });

        jlabNoOfField.setText("Enter number of the field (1-9):");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jlabPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxt1, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                            .addComponent(jtxt4)
                            .addComponent(jtxt7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxt5)
                            .addComponent(jtxt2, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(jtxt8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxt9)
                            .addComponent(jtxt6)
                            .addComponent(jtxt3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlabTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlabNoOfField)
                        .addGap(18, 18, 18)
                        .addComponent(jtxtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jbtnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(96, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlabPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxt4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxt7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabNoOfField))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPlayActionPerformed
        flag = true;
        jbtnPlay.setEnabled(false);
        if(jtxtInput.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "First enter the number of the field.");
            return;
        }
        int number = 0;
        try {
            number = Integer.parseInt(jtxtInput.getText().trim());
            if(number < 1 || number > 9) {
                JOptionPane.showMessageDialog(this, "Wrong input, must be number from 1 to 9.");
                jbtnPlay.setEnabled(true);
                return;
            }
        } catch(NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Wrong input, must be number from 1 to 9.");
            jbtnPlay.setEnabled(true);
            return;
        }
        
        ClientRequest cr = new ClientRequest();
        if(sign.equals("X")) {
            cr.setOperation(Operations.writeX);
        } else {
            cr.setOperation(Operations.writeO);
        }
        cr.setParametar(number);
        CommunicationWithServer.getInstance().sendRequest(cr);
        
        
    }//GEN-LAST:event_jbtnPlayActionPerformed

    public void setValue(ServerResponse sr) {
        Map<String, Object> data = new HashMap<>();
        data = (Map<String, Object>) sr.getResponse();
        switch((int)data.get("number")) {
            case 1:
                if(!jtxt1.getText().equals("X") && !jtxt1.getText().equals("O")) {
                    jtxt1.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);                   
                } else {
                    flag2 = true;
                }
                break;
            case 2:
                if(!jtxt2.getText().equals("X") && !jtxt2.getText().equals("O")) {
                    jtxt2.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 3:
                if(!jtxt3.getText().equals("X") && !jtxt3.getText().equals("O")) {
                    jtxt3.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 4:
                if(!jtxt4.getText().equals("X") && !jtxt4.getText().equals("O")) {
                    jtxt4.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 5:
                if(!jtxt5.getText().equals("X") && !jtxt5.getText().equals("O")) {
                    jtxt5.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 6:
                if(!jtxt6.getText().equals("X") && !jtxt6.getText().equals("O")) {
                    jtxt6.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 7:
                if(!jtxt7.getText().equals("X") && !jtxt7.getText().equals("O")) {
                    jtxt7.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 8:
                if(!jtxt8.getText().equals("X") && !jtxt8.getText().equals("O")) {
                    jtxt8.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            case 9:
               if(!jtxt9.getText().equals("X") && !jtxt9.getText().equals("O")) {
                    jtxt9.setText(data.get("sign").toString());
                    flag = false;
                    counter++;
                } else if(flag) {
                    flag = false;
                    flag1 = true;
                    JOptionPane.showMessageDialog(this, "Field is already taken!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag2 = true;
                }
                break;
            default:
                System.out.println("How this happened!?!");
                break;
        }
        if(counter == 1) {
            if((int)data.get("number") != 1) 
                jtxt1.setText("");
            if((int)data.get("number") != 2) 
                jtxt2.setText("");
            if((int)data.get("number") != 3) 
                jtxt3.setText("");
            if((int)data.get("number") != 4) 
                jtxt4.setText("");
            if((int)data.get("number") != 5) 
                jtxt5.setText("");
            if((int)data.get("number") != 6) 
                jtxt6.setText("");
            if((int)data.get("number") != 7) 
                jtxt7.setText("");
            if((int)data.get("number") != 8) 
                jtxt8.setText("");
            if((int)data.get("number") != 9) 
                jtxt9.setText("");
        }
        if(!data.get("sign").equals(sign)) {
            jbtnPlay.setEnabled(true);
        }
        if(flag1 == true) {
            jbtnPlay.setEnabled(true);
            flag1 = false;
        }
        if(flag2 == true) {
            jbtnPlay.setEnabled(false);
            flag2 = false;
        }
        checkWinner();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnPlay;
    private javax.swing.JLabel jlabNoOfField;
    private javax.swing.JLabel jlabPlayer;
    private javax.swing.JLabel jlabTurn;
    private javax.swing.JTextField jtxt1;
    private javax.swing.JTextField jtxt2;
    private javax.swing.JTextField jtxt3;
    private javax.swing.JTextField jtxt4;
    private javax.swing.JTextField jtxt5;
    private javax.swing.JTextField jtxt6;
    private javax.swing.JTextField jtxt7;
    private javax.swing.JTextField jtxt8;
    private javax.swing.JTextField jtxt9;
    private javax.swing.JTextField jtxtInput;
    // End of variables declaration//GEN-END:variables

    private void checkWinner() {       
        boolean won1 = jtxt1.getText().equals(sign) && jtxt2.getText().equals(sign) && jtxt3.getText().equals(sign);
        boolean won2 = jtxt4.getText().equals(sign) && jtxt5.getText().equals(sign) && jtxt6.getText().equals(sign);
        boolean won3 = jtxt7.getText().equals(sign) && jtxt8.getText().equals(sign) && jtxt9.getText().equals(sign);
        boolean won4 = jtxt1.getText().equals(sign) && jtxt4.getText().equals(sign) && jtxt7.getText().equals(sign);
        boolean won5 = jtxt2.getText().equals(sign) && jtxt5.getText().equals(sign) && jtxt8.getText().equals(sign);
        boolean won6 = jtxt3.getText().equals(sign) && jtxt6.getText().equals(sign) && jtxt9.getText().equals(sign);
        boolean won7 = jtxt1.getText().equals(sign) && jtxt5.getText().equals(sign) && jtxt9.getText().equals(sign);
        boolean won8 = jtxt3.getText().equals(sign) && jtxt5.getText().equals(sign) && jtxt7.getText().equals(sign);
        if(won1 || won2 || won3 || won4 || won5 || won6 || won6 || won7 || won8) {
            JOptionPane.showMessageDialog(this, "Congratulations, you won!!!", "Victory", JOptionPane.INFORMATION_MESSAGE);
            jbtnPlay.setEnabled(false);
            jlabTurn.setText("Victory");
            flag3 = true;
            return;
        }
        
        boolean lost1 = jtxt1.getText().equals(oppositeSign) && jtxt2.getText().equals(oppositeSign) && jtxt3.getText().equals(oppositeSign);
        boolean lost2 = jtxt4.getText().equals(oppositeSign) && jtxt5.getText().equals(oppositeSign) && jtxt6.getText().equals(oppositeSign);
        boolean lost3 = jtxt7.getText().equals(oppositeSign) && jtxt8.getText().equals(oppositeSign) && jtxt9.getText().equals(oppositeSign);
        boolean lost4 = jtxt1.getText().equals(oppositeSign) && jtxt4.getText().equals(oppositeSign) && jtxt7.getText().equals(oppositeSign);
        boolean lost5 = jtxt2.getText().equals(oppositeSign) && jtxt5.getText().equals(oppositeSign) && jtxt8.getText().equals(oppositeSign);
        boolean lost6 = jtxt3.getText().equals(oppositeSign) && jtxt6.getText().equals(oppositeSign) && jtxt9.getText().equals(oppositeSign);
        boolean lost7 = jtxt1.getText().equals(oppositeSign) && jtxt5.getText().equals(oppositeSign) && jtxt9.getText().equals(oppositeSign);
        boolean lost8 = jtxt3.getText().equals(oppositeSign) && jtxt5.getText().equals(oppositeSign) && jtxt7.getText().equals(oppositeSign);
        if(lost1 || lost2 || lost3 || lost4 || lost5 || lost6 || lost6 || lost7 || lost8) {
            JOptionPane.showMessageDialog(this, "Sorry, you lost!!!", "Defeat", JOptionPane.INFORMATION_MESSAGE);
            jbtnPlay.setEnabled(false);
            jlabTurn.setText("Defeat");
            flag3 = true;
            return;
        }
        
        boolean tied1 = jtxt1.getText().equals("X") || jtxt1.getText().equals("O");
        boolean tied2 = jtxt2.getText().equals("X") || jtxt2.getText().equals("O");
        boolean tied3 = jtxt3.getText().equals("X") || jtxt3.getText().equals("O");
        boolean tied4 = jtxt4.getText().equals("X") || jtxt4.getText().equals("O");
        boolean tied5 = jtxt5.getText().equals("X") || jtxt5.getText().equals("O");
        boolean tied6 = jtxt6.getText().equals("X") || jtxt6.getText().equals("O");
        boolean tied7 = jtxt7.getText().equals("X") || jtxt7.getText().equals("O");
        boolean tied8 = jtxt8.getText().equals("X") || jtxt8.getText().equals("O");
        boolean tied9 = jtxt9.getText().equals("X") || jtxt9.getText().equals("O");
        if(tied1 && tied2 && tied3 && tied4 && tied5 && tied6 && tied7 && tied8 && tied9) {
            JOptionPane.showMessageDialog(this, "It's tied.", "Tied", JOptionPane.INFORMATION_MESSAGE);
            jbtnPlay.setEnabled(false);
            jlabTurn.setText("Tied");
            flag3 = true;
            return;
        }
    }
    
    public JButton getJbtnPlay() {
        return jbtnPlay;
    }

    public JLabel getJlabTurn() {
        return jlabTurn;
    }

    public boolean isFlag3() {
        return flag3;
    }
        
}
